- name: configure bastion host
  hosts: bastion
  tasks:
    - name: copy ssh private key
      copy:
        src: ~/.ssh/id_rsa
        dest: ~/.ssh/id_rsa
        owner: ubuntu
        group: ubuntu
        mode: 0400

- name: configure ec2 instance to be jenkins slave
  hosts: privatehost
  become: true
  vars_files:
    - vars_vault.yml
  tasks:
    - name: update packages
      apt:
        name: "*"
        state: latest
        
    - name: Add Docker GPG apt Key
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present

    - name: Add Docker Repository
      apt_repository:
        repo: deb https://download.docker.com/linux/ubuntu focal stable
        state: present

    - name: install docker-ce
      apt:
        name: docker-ce
        state: latest
        
    - name: install openjdk 
      apt:
        name: "{{item}}"
        state: present
      loop:
        - openjdk-11-jdk
        
    - name: make sure that ssh and openjdk are running
      service:
        name: "{{item}}"
        state: started
        enabled: true
      loop:
        - ssh
        - docker
    
    - name: Create jenkins group
      group:
        name: jenkins
        gid: 1200

    - name: Create jenkins user
      user:
        name: jenkins
        uid: 1200
        group: jenkins
        shell: /bin/bash
        home: /home/jenkins
        
    - name: Add jenkins user to docker group
      user:
        name: jenkins
        groups: docker
        append: yes
        
    - name: Register Jenkins slave
      jenkins_slave:
        name: "ec2-private-agent"
        remote_fs: "/home/jenkins"  
        label: "ec2-peivate-agent"  
        user: "{{ jenkins_slave_user }}"  
        jnlp_url: "http://{{ jenkins_server_ip }}/jnlpJars/slave.jar"  
        success_url: "http://{{ jenkins_server_ip }}/computer/{{ slave_name }}/discardOfflineNodes"
        credentials_id: " {{ jenkins_server_secret }}"
      delegate_to: localhost
      register: slave_registration

    - debug:
        msg: "Slave '{{ slave_name }}' registration result: {{ slave_registration }}"
    
    # - name: Download Jenkins Agent JAR
    #   get_url:
    #     url: "http://{{ jenkins_server_ip }}:{{ jenkins_server_port }}/jnlpJars/agent.jar"
    #     dest: /home/jenkins/agent.jar
    #     mode: 0755

    # - name: Start Jenkins Age > /dev/null 2>&1 &"
    #   command: "java -jar /home/jenkins/agent.jar -jnlpUrl http://{{ jenkins_server_ip }}:{{ jenkins_server_port }} -name 'private-ec2-instance' -secret {{ jenkins_server_secret }} -workDir '/home/jenkins'"
