- name: configure ec2 instance to be jenkins slave
  hosts: all
  become: true
  vars:
    ssh_public_key: "{{ lookup('file', '~/.ssh/id_rsa.pub') }}"
  vars_files:
    - vars_vault.yml
  tasks:
    - name: update packages
      apt:
        name: "*"
        state: latest
        
    - name: Add Docker GPG apt Key
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present

    - name: Add Docker Repository
      apt_repository:
        repo: deb https://download.docker.com/linux/ubuntu focal stable
        state: present

    - name: install docker-ce
      apt:
        name: docker-ce
        state: latest
        
    - name: install openjdk 
      apt:
        name: "{{item}}"
        state: present
      loop:
        - openjdk-11-jdk
        
    - name: make sure that ssh and openjdk are running
      service:
        name: "{{item}}"
        state: started
        enabled: true
      loop:
        - ssh
        - docker
    
    - name: Create jenkins group
      group:
        name: jenkins
        gid: 1200

    - name: Create jenkins user
      user:
        name: jenkins
        uid: 1200
        group: jenkins
        shell: /bin/bash
        home: /home/jenkins
        
    - name: Add jenkins user to docker group
      user:
        name: jenkins
        groups: docker
        append: yes

    - name: Change ownership of /home/jenkins
      file:
        path: /home/jenkins
        owner: jenkins
        group: jenkins
        recurse: yes

    - name: create .ssh dir
      file:
        path: /home/jenkins/.ssh
        state: directory

    - name: Add SSH public key to authorized_keys for jenkins user
      authorized_key:
        user: jenkins
        key: "{{ ssh_public_key }}"
        state: present
    
    - name: Download Jenkins Agent JAR
      get_url:
        url: "http://{{ jenkins_server_ip }}/jnlpJars/agent.jar"
        dest: /home/jenkins/agent.jar
        mode: 0755

    - name: Start Jenkins Agent
      command: "java -jar /home/jenkins/agent.jar -jnlpUrl http://{{ jenkins_server_ip }} -name 'private-ec2-instance' -secret {{ jenkins_server_secret }} -workDir '/home/jenkins'"
